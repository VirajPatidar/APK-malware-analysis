import React from 'react'
import Navbar from './Navbar.js'
import Typography from '@material-ui/core/Typography';
import Container from '@material-ui/core/Container';
import { makeStyles } from '@material-ui/core/styles';
import Flowchart from '../img/flowchart.png';

import CustomizedAccordions from './CustomizedAccordions.js';

const useStyles = makeStyles((theme) => ({
    root: {
        flexGrow: 1
    },
    header: {
        color: '#00796b',
        fontSize: '1.4rem',
    },
    linkText: {
        textDecoration: `none`,
    },
    span: {
        color: '#00796b',
    },
}));

const AboutUs = () => {

    const classes = useStyles();

    return (
        <div>
            <Navbar />
            <div>
                <br />
                <Container maxWidth="lg">
                    <div className = {classes.header}>
                        Scan your APK file with 3 level checks
                    </div>
                    <br />
                    <CustomizedAccordions /> <br /> <br />
                    <div>
                        <Typography className = {classes.header}>
                            A simple flowchart depicting our three levels of analysis-
                        </Typography>
                        <img src={Flowchart} alt="flowchart" width="1200" height="450" />
                    </div>
                    <br />
                    <Typography>
                        <div className = {classes.header}>
                            Tech Stack
                        </div>
                        <div>
                            <ul>
                                <li><a href="https://reactjs.org/docs/getting-started.html" target="_blank" rel="noreferrer" className={classes.linkText}>
                                    React JS</a></li>
                                <li><a href="https://material-ui.com/" target="_blank" rel="noreferrer" className={classes.linkText}>
                                    Material UI</a></li>
                                <li><a href="https://docs.djangoproject.com/en/3.2/" target="_blank" rel="noreferrer" className={classes.linkText}>
                                    Django</a></li>
                                <li><a href="https://www.django-rest-framework.org/" target="_blank" rel="noreferrer" className={classes.linkText}>
                                    Django Rest Framework</a></li>
                                <li><a href="https://github.com/androguard" target="_blank" rel="noreferrer" className={classes.linkText}>
                                    Androguard</a> for static analysis</li>
                                <li><a href="https://www.npmjs.com/package/jspdf" target="_blank" rel="noreferrer" className={classes.linkText}>
                                    jsPDF</a></li>
                            </ul>
                        </div>
                        <div>
                            This is a web application for <span className={classes.span}>malware analysis of android applications</span>.<br />
                            This application lets the user upload apk file, which is then analyzed using static malware analyzing techniques and a report is generated of the result obtained.
                            The user has the option to download the report in PDF format.
                        </div>
                        <div>
                            <br />
                            We use static analysis for the detection of malware in the file.
                            Static analysis involves analysis of the <span className={classes.span}>package </span> 
                            and <span className={classes.span}>permissions </span> 
                            defined in the <i> Manifest.xml </i>file.
                            <br />
                            <span className={classes.span}>Androguard</span> is used to extract the package and 
                            permissions from the file and the extracted data is compared with a dataset which has 
                            malicious packages and permissions from over 400 malware applications.
                            <br />
                            The result of the analysis is then printed on the screen which includes the 
                            name and size of the application, package name and the permissions and their description. 
                            <br />
                            The user is also given an option to download the result in a PDF format.
                            <br /><br />
                        </div>
                    </Typography>
                </Container>
            </div>
        </div>
    )
}

export default AboutUs